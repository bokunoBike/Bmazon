第一部分Python编程基础 
第1章 Python基础 3 
1.1 在交互式环境中输入表达式 3 
1.2 整型、浮点型和字符串数据类型 6 
1.3 字符串连接和复制 6 
1.4 在变量中保存值 7 
1.4.1 赋值语句 7 
1.4.2 变量名 9 
1.5 第一个程序 9 
1.6 程序剖析 11 
1.6.1 注释 11 
1.6.2 print（）函数 11 
1.6.3 input（）函数 11 
1.6.4 打印用户的名字 12 
1.6.5 len（）函数 12 
1.6.6 str（）、int（）和float（）函数 13 
1.7 小结 15 
1.8 习题 15 
第2章 控制流 17 
2.1 布尔值 18 
2.2 比较操作符 19 
2.3 布尔操作符 20 
2.3.1 二元布尔操作符 20 
2.3.2 not操作符 21 
2.4 混合布尔和比较操作符 21 
2.5 控制流的元素 22 
2.5.1 条件 22 
2.5.2 代码块 22 
2.6 程序执行 23 
2.7 控制流语句 23 
2.7.1 if语句 23 
2.7.2 else语句 24 
2.7.3 elif语句 25 
2.7.4 while循环语句 30 
2.7.5 恼人的循环 31 
2.7.6 break语句 33 
2.7.7 continue语句 34 
2.7.8 for循环和range（）函数 37 
2.7.9 等价的while循环 39 
2.7.10 range（）的开始、停止和步长参数 39 
2.8 导入模块 40from import语句 41 
2.9 用sys.exit（）提前结束程序 41 
2.10 小结 41 
2.11 习题 41 
第3章 函数 43 
3.1 def语句和参数 44 
3.2 返回值和return语句 45 
3.3 None值 46 
3.4 关键字参数和print（）47 
3.5 局部和全局作用域 48 
3.5.1 局部变量不能在全局作用域内使用 48 
3.5.2 局部作用域不能使用其他局部作用域内的变量 49 
3.5.3 全局变量可以在局部作用域中读取 49 
3.5.4 名称相同的局部变量和全局变量 50 
3.6 global语句 50 
3.7 异常处理 52 
3.8 一个小程序：猜数字 54 
3.9 小结 55 
3.10 习题 56 
3.11 实践项目 56 
3.11.1 Collatz序列 56 
3.11.2 输入验证 57 
第4章 列表 59 
4.1 列表数据类型 59 
4.1.1 用下标取得列表中的单个值 60 
4.1.2 负数下标 61 
4.1.3 利用切片取得子列表 61 
4.1.4 用len（）取得列表的长度 62 
4.1.5 用下标改变列表中的值 62 
4.1.6 列表连接和列表复制 62 
4.1.7 用del语句从列表中删除值 63 
4.2 使用列表 63 
4.2.1 列表用于循环 64 
4.2.2 in和notin操作符 65 
4.2.3 多重赋值技巧 66 
4.3 增强的赋值操作 66 
4.4 方法 67 
4.4.1 用index（）方法在列表中查找值 67 
4.4.2 用append（）和insert（）方法在列表中添加值 68 
4.4.3 用remove（）方法从列表中删除值 69 
4.4.4 用sort（）方法将列表中的值排序 69 
4.5 例子程序：神奇8球和列表 70 
4.6 类似列表的类型：字符串和元组 71 
4.6.1 可变和不可变数据类型 72 
4.6.2 元组数据类型 73 
4.6.3 用list（）和tuple（）函数来转换类型 74 
4.7 引用 75 
4.7.1 传递引用 76 
4.7.2 copy模块的copy（）和deepcopy（）函数 77 
4.8 小结 78 
4.9 习题 78 
4.10 实践项目 79 
4.10.1 逗号代码 79 
4.10.2 字符图网格 79 
第5章 字典和结构化数据 81 
5.1 字典数据类型 81 
5.1.1 字典与列表 82 
5.1.2 keys（）、values（）和items（）方法 83 
5.1.3 检查字典中是否存在键或值 84 
5.1.4 get（）方法 84 
5.1.5 setdefault（）方法 85 
5.2 漂亮打印 86 
5.3 使用数据结构对真实世界建模 87 
5.3.1 井字棋盘 88 
5.3.2 嵌套的字典和列表 91 
5.4 小结 92 
5.5 习题 93 
5.6 实践项目 93 
5.6.1 好玩游戏的物品清单 93 
5.6.2 列表到字典的函数，针对好玩游戏物品清单 94 
第6章 字符串操作 95 
6.1 处理字符串 95 
6.1.1 字符串字面量 95 
6.1.2 双引号 96 
6.1.3 转义字符 96 
6.1.4 原始字符串 96 
6.1.5 用三重引号的多行字符串 97 
6.1.6 多行注释 97 
6.1.7 字符串下标和切片 98 
6.1.8 字符串的in和notin操作符 98 
6.2 有用的字符串方法 99 
6.2.1 字符串方法upper（）、lower（）、isupper（）和islower（）99 
6.2.2 isX字符串方法 100 
6.2.3 字符串方法startswith（）和endswith（）102 
6.2.4 字符串方法join（）和split（）102 
6.2.5 用rjust（）、ljust（）和center（）方法对齐文本 103 
6.2.6 用strip（）、rstrip（）和lstrip（）删除空白字符 104 
6.2.7 用pyperclip模块拷贝粘贴字符串 105 
6.3 项目：口令保管箱 106 
第1步：程序设计和数据结构 106 
第2步：处理命令行参数 106 
第3步：复制正确的口令 107 
6.4 项目：在Wiki标记中添加无序列表 108 
第1步：从剪贴板中复制和粘贴 108 
第2步：分离文本中的行，并添加星号 109 
第3步：连接修改过的行 109 
6.5 小结 110 
6.6 习题 110 
6.7 实践项目 111 
表格打印 111 
第二部分 自动化任务 
第7章 模式匹配与正则表达式 115 
7.1 不用正则表达式来查找文本模式 116 
7.2 用正则表达式查找文本模式 117 
7.2.1 创建正则表达式对象 118 
7.2.2 匹配Regex对象 118 
7.2.3 正则表达式匹配复习 119 
7.3 用正则表达式匹配更多模式 119 
7.3.1 利用括号分组 119 
7.3.2 用管道匹配多个分组 120 
7.3.3 用问号实现可选匹配 121 
7.3.4 用星号匹配零次或多次 121 
7.3.5 用加号匹配一次或多次 122 
7.3.6 用花括号匹配特定次数 122 
7.4 贪心和非贪心匹配 123 
7.5 findall（）方法 124 
7.6 字符分类 124 
7.7 建立自己的字符分类 125 
7.8 插入字符和美元字符 126 
7.9 通配字符 126 
7.9.1 用点—星匹配所有字符 127 
7.9.2 用句点字符匹配换行 127 
7.10 正则表达式符号复习 128 
7.11 不区分大小写的匹配 128 
7.12 用sub（）方法替换字符串 129 
7.13 管理复杂的正则表达式 129 
7.14 组合使用re.IGNORECASE、re.DOTALL和re.VERBOSE 130 
7.15 项目：电话号码和Email地址提取程序 130 
第1步：为电话号码创建一个正则表达式 131 
第2步：为email地址创建一个正则表达式 132 
第3步：在剪贴板文本中找到所有匹配 132 
第4步：所有匹配连接成一个字符串，复制到剪贴板 133 
第5步：运行程序 133 
第6步：类似程序的构想 134 
7.16 小结 134 
7.17 习题 134 
7.18 实践项目 136 
7.18.1 强口令检测 136 
7.18.2 strip（）的正则表达式版本 136 
第8章 读写文件 137 
8.1 文件与文件路径 137 
8.1.1 Windows上的倒斜杠以及OS X和Linux上的正斜杠 138 
8.1.2 当前工作目录 139 
8.1.3 绝对路径与相对路径 139 
8.1.4 用os.makedirs（）创建新文件夹 140 
8.1.5 os.path模块 140 
8.1.6 处理绝对路径和相对路径 141 
8.1.7 查看文件大小和文件夹内容 142 
8.1.8 检查路径有效性 143 
8.2 文件读写过程 144 
8.2.1 用open（）函数打开文件 145 
8.2.2 读取文件内容 145 
8.2.3 写入文件 146 
8.3 用shelve模块保存变量 147 
8.4 用pprint.pformat（）函数保存变量 148 
8.5 项目：生成随机的测验试卷文件 149 
第1步：将测验数据保存在一个字典中 149 
第2步：创建测验文件，并打乱问题的次序 150 
第3步：创建答案选项 151 
第4步：将内容写入测验试卷和答案文件 151 
8.6 项目：多重剪贴板 153 
第1步：注释和shelf设置 153 
第2步：用一个关键字保存剪贴板内容 154 
第3步：列出关键字和加载关键字的内容 154 
8.7 小结 155 
8.8 习题 155 
8.9 实践项目 156 
8.9.1 扩展多重剪贴板 156 
8.9.2 疯狂填词 156 
8.9.3 正则表达式查找 156 
第9章 组织文件 157 
9.1 shutil模块 158 
9.1.1 复制文件和文件夹 158 
9.1.2 文件和文件夹的移动与改名 158 
9.1.3 永久删除文件和文件夹 160 
9.1.4 用send2trash模块安全地删除 160 
9.2 遍历目录树 161 
9.7 用zipfile模块压缩文件 162 
9.3.1 读取ZIP文件 163 
9.3.2 从ZIP文件中解压缩 164 
9.3.3 创建和添加到ZIP文件 164 
9.4 项目：将带有美国风格日期的文件改名为欧洲风格日期 165 
第1步：为美国风格的日期创建一个正则表达式 165 
第2步：识别文件名中的日期部分 166 
第3步：构成新文件名，并对文件改名 167 
第4步：类似程序的想法 168 
9.5 项目：将一个文件夹备份到一个ZIP文件 168 
第1步：弄清楚ZIP文件的名称 168 
第2步：创建新ZIP文件 169 
第3步：遍历目录树并添加到ZIP文件。170 
第4步：类似程序的想法 170 
9.6 小结 171 
9.7 习题 171 
9.8 实践项目 171 
9.8.1 选择性拷贝 171 
9.8.2 删除不需要的文件 172 
9.8.3 消除缺失的编号 172 
第10章 调试 173 
10.1 抛出异常 174 
10.2 取得反向跟踪的字符串 175 
10.3 断言 176 
10.3.1 在交通灯模拟中使用断言 177 
10.3.2 禁用断言 178 
10.4 日志 178 
10.4.1 使用日志模块 178 
10.4.2 不要用print（）调试 180 
10.4.3 日志级别 180 
10.4.4 禁用日志 181 
10.4.5 将日志记录到文件 182 
10.5 IDLE的调试器 182 
10.5.1 Go 183 
10.5.2 Step 183 
10.5.3 Over 183 
10.5.4 Out 183 
10.5.5 Quit 183 
10.5.6 调试一个数字相加的程序 184 
10.5.7 断点 185 
10.6 小结 187 
10.7 习题 187 
10.7 实践项目 188 
调试硬币抛掷 188 
第11章 从Web抓取信息 189 
11.1 项目：利用webbrowser模块的mapIt.py 190 
第1步：弄清楚URL 190 
第2步：处理命令行参数 191 
第3步：处理剪贴板内容，加载浏览器 191 
第4步：类似程序的想法 192 
11.2 用requests模块从Web下载文件 192 
11.2.1 用requests.get（）函数下载一个网页 193 
11.2.2 检查错误 193 
10.3 将下载的文件保存到硬盘 194 
10.4 HTML 195 
10.4.1 学习HTML的资源 195 
10.4.2 快速复习 195 
10.4.3 查看网页的HTML源代码 196 
10.4.4 打开浏览器的开发者工具 197 
10.4.5 使用开发者工具来寻找HTML元素 198 
10.5 用BeautifulSoup模块解析HTML 199 
10.5.1 从HTML创建一个BeautifulSoup对象 200 
10.5.2 用select（）方法寻找元素 200 
10.5.3 通过元素的属性获取数据 202 
10.6 项目：“I’mFeelingLucky”Google查找 202 
第1步：获取命令行参数，并请求查找页面 203 
第2步：找到所有的结果 203第3步：针对每个结果打开Web浏览器 204 
第4步：类似程序的想法 205 
10.7 项目：下载所有XKCD漫画 205 
第1步：设计程序 206 
第2步：下载网页 207 
第3步：寻找和下载漫画图像 207 
第4步：保存图像，找到前一张漫画 208 
第4步：类似程序的想法 209 
10.8 用selenium模块控制浏览器 210 
10.8.1 启动selenium控制的浏览器 210 
10.8.2 在页面中寻找元素 211 
10.8.3 点击页面 212 
10.8.4 填写并提交表单 212 
10.8.5 发送特殊键 213 
10.8.6 点击浏览器按钮 213 
10.8.7 关于selenium的更多信息 214 
10.9 小结 214 
10.10 习题 214 
10.11 实践项目 215 
10.11.1 命令行邮件程序 215 
10.11.2 图像网站下载 215 
10.11.32048215 
10.11.4 链接验证 215 
第12章 处理Excel电子表格 217 
12.1 Excel文档 217 
12.2 安装openpyxl模块 218 
12.3 读取Excel文档 218 
12.3.1 用openpyxl模块打开Excel文档 219 
12.3.2 从工作簿中取得工作表 219 
12.3.3 从表中取得单元格 220 
12.3.4 列字母和数字之间的转换 221 
12.3.5 从表中取得行和列 222 
12.3.6 工作薄、工作表、单元格 223 
12.4 项目：从电子表格中读取数据 223 
第1步：读取电子表格数据 224 
第2步：填充数据结构 225 
第3步：将结果写入文件 226 
第4步：类似程序的思想 227 
12.5 写入Excel文档 227 
12.5.1 创建并保存Excel文档 227 
12.5.2 创建和删除工作表 228 
12.5.3 将值写入单元格 229 
12.6 项目：更新一个电子表格 229 
第1步：利用更新信息建立数据结构 230 
第2步：检查所有行，更新不正确的价格 231 
第4步：类似程序的思想 231 
12.7 设置单元格的字体风格 232 
12.8 Font对象 232 
12.9 公式 234 
12.10 调整行和列 235 
12.10.1 设置行高和列宽 235 
12.10.2 合并和拆分单元格 236 
12.10.3 冻结窗格 237 
12.10.4 图表 238 
12.11 小结 240 
12.11 习题 240 
12.12 实践项目 241 
12.12.1 乘法表 241 
12.12.2 空行插入程序 241 
12.12.3 电子表格单元格翻转程序 242 
12.12.4 文本文件到电子表格 242 
12.12.5 电子表格到文本文件 242 
第13章 处理PDF和Word文档 243 
13.1 PDF文档 243 
13.1.1 从PDF提取文本 244 
13.1.2 解密PDF 245 
13.1.3 创建PDF 246 
13.1.4 拷贝页面 246 
13.1.5 旋转页面 247 
13.1.6 叠加页面 248 
13.1.7 加密PDF 249 
13.2 项目：从多个PDF中合并选择的页面 250 
第1步：找到所有PDF文件 250 
第2步：打开每个PDF文件 251 
第3步：添加每一页 252 
第4步：保存结果 252 
第5步：类似程序的想法 253 
13.3 Word文档 253 
13.3.1 读取Word文档 254 
13.3.2 从.docx文件中取得完整的文本 254 
13.3.3 设置Paragraph和Run对象的样式 255 
13.3.4 创建带有非默认样式的Word文档 257 
13.3.5 Run属性 257 
13.3.6 写入Word文档 258 
13.3.7 添加标题 260 
13.3.8 添加换行符和换页符 261 
13.3.9 添加图像 261 
13.4 小结 262 
13.5 习题 262 
13.6 实践项目 263 
13.6.1 PDF偏执狂 263 
13.6.2 定制邀请函，保存为Word文档 263 
13.6.3 暴力PDF口令破解程序 264 
第14章 处理CSV文件和JSON数据 265 
14.1 csv模块 265 
14.2.1 Reader对象 266 
14.2.2 在for循环中，从Reader对象读取数据 267 
14.2.3 Writer对象 268 
14.2.4 delimiter和lineterminator关键字参数 269 
14.3 项目：从CSV文件中删除表头 269 
第1步：循环遍历每个CSV文件 270 
第2步：读入CSV文件 270 
第3步：写入CSV文件，没有 
第一行 271 
第4步：类似程序的想法 272 
14.4 JSON和API 272 
14.5 json模块 273 
14.5.1 用loads（）函数读取 
JSON 273 
14.5.2 用dumps函数写出 
JSON 273 
14.6 项目：取得当前的天气数据 274 
第1步：从命令行参数获取位置 274 
第2步：下载JSON数据 275 
第3步：加载JSON数据并打印天气 275 
第4步：类似程序的想法 277 
14.7 小结 277 
14.8 习题 277 
14.9 实践项目 277 
Excel到CSV的转换程序 277 
第15章 保持时间、计划任务和启动程序 279 
15.1 time模块 279 
15.1.1 time.time（）函数 279 
15.1.2 time.sleep（）函数 280 
15.2 数字四舍五入 281 
15.3 项目：超级秒表 282 
第1步：设置程序来记录时间 282 
第2步：记录并打印单圈时间 283 
第4步：类似程序的想法 283 
15.4 datetime模块 284 
15.4.1 timedelta数据类型 285 
15.4.2 暂停直至特定日期 286 
15.4.3 将datetime对象转换为字符串 287 
15.4.4 将字符串转换成datetime对象 288 
15.5 回顾Python的时间函数 288 
15.6 多线程 289 
15.6.1 向线程的目标函数传递参数 290 
15.6.2 并发问题 291 
15.7 项目：多线程XKCD下载程序 291 
第1步：修改程序以使用函数 292 
第2步：创建并启动线程 293 
第3步：等待所有线程结束 293 
15.8 从Python启动其他程序 294 
15.8.1 向Popen（）传递命令行参数 295 
15.8.2 TaskScheduler、launchd和 
cron 296 
15.8.3 用Python打开网站 296 
15.8.4 运行其他Python脚本 296 
15.8.5 用默认的应用程序打开文件 297 
15.9 项目：简单的倒计时程序 298 
第1步：倒计时 298 
第2步：播放声音文件 298 
第3步：类似程序的想法 299 
15.10 小结 299 
15.11 习题 300 
15.12 实践项目 300 
15.12.1 美化的秒表 300 
15.12.2 计划的Web漫画下载 301 
第16章 发送电子邮件和短信 303 
16.1 SMTP 303 
16.2 发送电子邮件 304 
16.2.1 连接到SMTP服务器 304 
16.2.2 发送SMTP的“Hello”消息 305 
16.2.3 开始TLS加密 306 
16.2.4 登录到SMTP服务器 306 
16.2.5 发送电子邮件 306 
16.2.6 从SMTP服务器断开 307 
16.3 IMAP 307 
16.4 用IMAP获取和删除电子邮件 307 
16.4.1 连接到IMAP服务器 308 
16.4.2 登录到IMAP服务器 309 
16.4.3 搜索电子邮件 309 
16.4.4 选择文件夹 309 
16.4.5 执行搜索 310 
16.4.6 大小限制 312 
16.4.7 取邮件并标记为已读 312 
16.4.8 从原始消息中获取电子邮件地址 313 
16.4.9 从原始消息中获取正文 314 
16.4.10 删除电子邮件 315 
16.4.11 从IMAP服务器断开 315 
16.5 项目：向会员发送会费提醒电子邮件 316 
第1步：打开Excel文件 316 
第2步：查找所有未付成员 317 
第3步：发送定制的电子邮件提醒 318 
16.6 用Twilio发送短信 319 
16.6.1 注册Twilio账号 319 
16.6.2 发送短信 320 
16.7 项目：“只给我发短信”模块 321 
16.8 小结 322 
16.9 习题 323 
16.10 实践项目 323 
16.10.1 随机分配家务活的电子邮件程序 323 
16.10.2 伞提醒程序 324 
16.10.3 自动退订 324 
16.10.4 通过电子邮件控制你的电脑 324 
第17章 操作图像 327 
17.1 计算机图像基础 327 
17.1.1 颜色和RGBA值 328 
17.1.2 坐标和Box元组 329 
17.2 用Pillow操作图像 330 
17.2.1 处理Image数据类型 331 
17.2.2 裁剪图片 332 
17.2.3 复制和粘贴图像到其他图像 333 
17.2.4 调整图像大小 335 
17.2.5 旋转和翻转图像 336 
17.2.6 更改单个像素 338 
17.3 项目：添加徽标 339 
第1步：打开徽标图像 340 
第2步：遍历所有文件并打开图像 341 
第3步：调整图像的大小 341 
第4步：添加徽标，并保存更改 342 
第5步：类似程序的想法 343 
17.4 在图像上绘画 344 
17.4.1 绘制形状 344 
17.4.2 绘制文本 346 
17.5 小结 347 
17.6 习题 348 
17.7 实践项目 348 
17.7.1 扩展和修正本章项目的程序 348 
17.7.2 在硬盘上识别照片文件夹 349 
17.7.3 定制的座位卡 350 
第18章 用GUI自动化控制键盘和鼠标 351 
18.1 安装pyautogui模块 351 
18.2 走对路 352 
18.2.1 通过注销关闭所有程序 352 
18.2.2 暂停和自动防故障装置 352 
18.3 控制鼠标移动 353 
18.3.1 移动鼠标 354 
18.3.2 获取鼠标位置 354 
18.4 项目：“现在鼠标在哪里？”355 
第1步：导入模块 355 
第2步：编写退出代码和无限循环 355 
第3步：获取并打印鼠标坐标。356 
18.5 控制鼠标交互 357 
18.5.1 点击鼠标 357 
18.5.2 拖动鼠标 357 
18.5.3 滚动鼠标 359 
18.6 处理屏幕 360 
18.6.1 获取屏幕快照 360 
18.6.2 分析屏幕快照 360 
18.7 项目：扩展mouseNow程序 361 
18.8 图像识别 362 
18.9 控制键盘 363 
18.9.1 通过键盘发送一个字符串 363 
18.9.2 键名 364 
18.9.3 按下和释放键盘 365 
18.9.4 热键组合 365 
18.10 复习PyAutoGUI的函数 366 
18.11 项目：自动填表程序 367 
第1步：弄清楚步骤 368 
第2步：建立坐标 368 
第3步：开始键入数据 370 
第4步：处理选择列表和单选按钮 371 
第5步：提交表单并等待 372 
18.12 小结 372 
18.13 习题 373 
18.14 实践项目 373 
18.14.1 看起来很忙 373 
18.14.2 即时通信机器人 373 
18.14.3 玩游戏机器人指南 374 
附录A 安装第三方模块 375 
附录B 运行程序 377 
附录C 习题答案 381                                 --此文字指  版本。